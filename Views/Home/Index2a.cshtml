@using System.Configuration;
@using donation.Models;

@{
    ViewBag.Title = "Help Bicol";
    string version = ConfigurationManager.AppSettings[AppSettingsKey.Version];
}

@section styles {
    <link href="~/Content/home.css?v=@version" rel="stylesheet" />
}

<main class="OPT2A">
    <section>
        <div class="outer__section">
            <div class="hashtag">
                <span>#HelpUragon</span>
            </div>
            <!-- <div class="avatar">
                <img src="~/Content/images/OPT2A/avatar.png" alt="">
            </div> -->

            <div class="inner__section">
                <div class="avatar">
                    <img src="~/Content/images/OPT2A/avatar.png" alt="">
                </div>
                <div class="inner">
                    <div class="body">
                        <div class="section__details">
                            <div class="title">Help us bring hope relief to typhoon survivors.</div>
                            <div class="description">Your donation provides essential supplies and support to those in urgent need. Together, we can make a difference.</div>
                            <div class="author">
                                <span>Vice Mayor</span>
                                <span class="name">Hector Loyola "Long Hair"</span>
                            </div>
                        </div>
                        <div class="form-container">
                            @using (Html.BeginForm("SubmitDonorForm", "Home", FormMethod.Post, new { id = "donorForm" }))
                            {
                                @Html.AntiForgeryToken()
                                <label for="Name">Donor Name</label>
                                <input type="text" id="Name" name="Name" minlength="3" placeholder="Full Name (Optional)" required />
                                @*<input type="text" id="Name" placeholder="Full Name (Optional)" />
                                    <div id="nameWarning" class="warning" style="display:none; color: red;">Please enter a name.</div>*@

                                <label for="Email">Email Address</label>
                                @*<input type="email" id="Email" placeholder="Email Address (Optional)" />*@
                                <input type="email" id="Email" name="Email" placeholder="Email Address (Optional)" />
                                @*<div id="emailWarning" class="warning" style="display:none; color: red;">Please enter a valid email address.</div>*@

                                <label for="ContactNumber">Contact Number</label>
                                <input type="text" id="ContactNumber" name="ContactNumber" minlength="11" placeholder="09**-****-****" />
                                @*<input type="tel" id="ContactNumber" placeholder="09**-****-****" />*@
                                @*<div id="contactWarning" class="warning" style="display:none; color: red;">Please enter a valid 11-digit contact number.</div>*@


                                <div class="checkbox-group">
                                    <input type="checkbox" id="stayAnonymous" />
                                    <label for="stayAnonymous">Stay anonymous</label>
                                </div>

                                <button type="button" id="btn-submit" class="btn-donate">Donate Now</button>
                            }
                        </div>
                        <!-- <div class="section__qr">
                            <span>Scan to donate</span>
                            <div class="qr">
                                <img src="~/Content/images/OPT2A/qr-code.png" alt="">
                            </div>
                        </div> -->
                    </div>
                    <div class="footer">
                        <span>Powered by</span>
                        <div class="logos">
                            <img src="~/Content/images/OPT2A/bastion-logo.png" alt="">
                            <img src="~/Content/images/OPT2A/omnipay-logo.png" alt="">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script data-version="@version">
    $(document).ready(function () {
    // Function to toggle form field disable state when "Stay anonymous" is checked
    function toggleAnonymousFields() {
        const isAnonymous = $('#stayAnonymous').is(':checked');

        if (isAnonymous) {
            $('#Name, #Email, #ContactNumber').prop('disabled', true); // Disable the fields
            $('#Name, #Email, #ContactNumber').addClass('grayed-out'); // Apply grayed-out style
        } else {
            $('#Name, #Email, #ContactNumber').prop('disabled', false); // Enable the fields
            $('#Name, #Email, #ContactNumber').removeClass('grayed-out'); // Remove grayed-out style
        }
    }

    // Handle changes to the "Stay anonymous" checkbox
    $('#stayAnonymous').on('change', function () {
        toggleAnonymousFields(); // Toggle form fields state
    });

    // Initial toggle on page load
    toggleAnonymousFields();

    // Handle "Donate Now" button click
    $('.btn-donate').on('click', function () {
        // Gather form data
        const donorData = {
            Name: $('#Name').val() || null,
            Email: $('#Email').val() || null,
            ContactNumber: $('#ContactNumber').val() || null
        };

        // Get the Anti-forgery token value
        const requestVerificationToken = $('input[name="__RequestVerificationToken"]').val();

        const donorForm = $("form#donorForm");

        const isAnonymous = $('#stayAnonymous').is(':checked');
        //console.log(isAnonymous)

        if (!isAnonymous) {
            console.log("test 125")

            //$(donorForm).validate().form();
            $("form#donorForm").validate({
                rules: {
                    Name: {
                        minlength: 3,
                        required: true
                    },
                    Email: {
                        required: false, // Optional field
                        email: true
                    },
                    ContactNumber: {
                        required: false,
                        minlength: 11,
                        maxlength: 11
                    }
                },
                messages: {
                    Name: {
                        minlength: "Please enter at least 3 characters."
                    },
                    Email: {
                        email: "Please enter a valid email address."
                    },
                    ContactNumber: {
                        required: "Please enter a contact number.",
                        minlength: "Please enter a valid 11-digit contact number.",
                        maxlength: "Please enter a valid 11-digit contact number."
                    }
                }
            })

            if (!donorForm.valid()) {
                console.log("test valid)()")
                return;
            }

            $.ajax({
                url: '@Url.Action("SubmitDonorForm", "Home")', // Correctly map to HomeController
                method: 'POST',
                dataType: 'json',
                data: {
                    donor: donorData,
                    isAnonymous: isAnonymous,
                    __RequestVerificationToken: requestVerificationToken // Include token in data
                },
                success: function (response) {
                    // Log the full response for debugging
                    console.log("Server Response:", response);

                    if (response.IsSuccess) {
                        // Display success message
                        console.log("Donor Data Saved:", response.ResultJson);
                        $('form')[0].reset(); // Clear the form
                    } else {
                        alert("Error: " + (response.Error || response.Message));
                        console.log("Error Details:", response);
                    }
                },
                error: function (xhr, status, error) {
                    // Log the error details for debugging
                    console.error("AJAX Error:", {
                        xhr: xhr,
                        status: status,
                        error: error
                    });

                    // Display a generic error message
                    alert("An unexpected error occurred. Please try again later.");
                }
            });
        }
        else {
            $.ajax({
                url: '@Url.Action("SubmitDonorForm", "Home")', // Correctly map to HomeController
                method: 'POST',
                dataType: 'json',
                data: {
                    donor: donorData,
                    isAnonymous: isAnonymous,
                    __RequestVerificationToken: requestVerificationToken // Include token in data
                },
                success: function (response) {
                    // Log the full response for debugging
                    console.log("Server Response:", response);

                    if (response.IsSuccess) {
                        // Display success message
                        console.log("Donor Data Saved:", response.ResultJson);
                        $('form')[0].reset(); // Clear the form
                    } else {
                        alert("Error: " + (response.Error || response.Message));
                        console.log("Error Details:", response);
                    }
                },
                error: function (xhr, status, error) {
                    // Log the error details for debugging
                    console.error("AJAX Error:", {
                        xhr: xhr,
                        status: status,
                        error: error
                    });

                    // Display a generic error message
                    alert("An unexpected error occurred. Please try again later.");
                }
            });
        }

        // Log gathered data and the request token for debugging
        //console.log("Gathered Data:", donorData);
        //console.log("Is Anonymous:", isAnonymous);
        //console.log("Request Verification Token:", requestVerificationToken);

        // Send AJAX POST request

    });
});

    </script>

}
